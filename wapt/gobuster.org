#+title: Gobuster
#+author: gabriel
#+description: With the Gobuster scanning tool, we can discover hidden directories, files, subdomains, and much more on web servers. In this section

* dns mode
The DNS mode is designed to discover subdomains under a specific domain. This mode is used to try possible subdomain names for a given target domain and determine if these subdomains are active.

When using Gobuster's DNS mode, a wordlist and a target domain are required. This mode performs DNS queries by combining each word in the wordlist with the target domain and determines which subdomains can be resolved based on the results of these queries.

*example* ->
: gobuster dns -w /root/Desktop/misc/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -d facebook.com


* vhost mode
The Vhost mode targets multiple websites hosted under different names on the same server. Many organizations host multiple sites on a single server using virtual hosts to efficiently utilize resources.

Gobuster's Vhost mode is designed to discover these virtual hosts and can potentially uncover hidden or forgotten websites.

Using the Vhost mode requires a target and a wordlist, similar to Gobuster's other modes. However, in this mode, fuzzing is specifically done in the HTTP Host header

*example* ->
: gobuster vhost -w /root/Desktop/misc/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u https://facebook.com

Filtering HTTP response size is a common method. The parameter we can use in Gobuster to filter HTTP response size is --exclude-length. The following command fetches results where the HTTP response size is different from 1542 bytes.

: gobuster vhost -u https://example.com -w /path/to/wordlist --exclude-length 1542

This method is particularly useful when you want to discover multiple virtual hosts hosted by a single web server. Vhost fuzzing allows security researchers and penetration testers to uncover hidden services and applications that might not be found using traditional methods.

This technique is critical for identifying vulnerabilities and understanding the attack surface of the target system, especially in large and complex web infrastructures.
